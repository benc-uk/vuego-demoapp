#
# Deploy to Azure Kubernetes Service using Helm
# Using Bicep for infrastructure as code
#

name: CD Release - AKS

on:
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: "Image tag to be deployed"
        required: true
        default: "latest"

# Note. Required secrets: CR_PAT & AZURE_CREDENTIALS

env:
  AKS_NAME: benc
  AKS_RES_GROUP: aks
  HELM_RELEASE: vuego
  HELM_NAMESPACE: demoapps
  INGRESS_DNS_HOST: vuego-demoapp.kube.benco.io

jobs:
  #
  # Deploy to Kubernetes (AKS)
  #
  deploy-aks:
    name: Deploy to AKS with Helm
    runs-on: ubuntu-latest
    outputs:
      deployment_id: ${{ steps.deploy.outputs.deployment_id }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v1

      - name: "Start deployment"
        id: deploy
        uses: chrnorm/deployment-action@v1.2.0
        with:
          ref: ${{ github.event.ref }}
          token: ${{ github.token }}
          environment: AKS - ${{ env.HELM_RELEASE }}

      - name: "Login to Azure"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Get AKS credentials"
        run: |
          az aks get-credentials -n $AKS_NAME -g $AKS_RES_GROUP

      - name: "Helm release"
        run: |
          helm repo add benc-uk https://benc-uk.github.io/helm-charts
          helm upgrade ${{ env.HELM_RELEASE }} benc-uk/webapp \
          --install \
          --namespace ${{ env.HELM_NAMESPACE }} \
          --values ./kubernetes/aks-live.yaml \
          --set image.tag=${{ github.event.inputs.IMAGE_TAG }},ingress.host=$INGRESS_DNS_HOST

      - name: "End deployment - failure"
        if: ${{ failure() }}
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ needs.deploy-bicep.outputs.deployment_id }}

  #
  # Post deployment testing stage
  #
  validate-deployment:
    name: "Run Deployment Tests"
    needs: deploy-aks
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Validate site is running"
        run: .github/scripts/url-check.sh -u https://${{ env.INGRESS_DNS_HOST }} -s "Vue.js" -t 200

      - name: "Run API tests"
        run: |
          npm install newman --silent
          node_modules/newman/bin/newman.js run tests/postman_collection.json --global-var apphost=${{ env.INGRESS_DNS_HOST }}

      - name: "End deployment - success"
        if: ${{ success() }}
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: ${{ github.token }}
          state: success
          deployment_id: ${{ needs.deploy-aks.outputs.deployment_id }}
          environment_url: https://${{ env.INGRESS_DNS_HOST }}

      - name: "End deployment - failure"
        if: ${{ failure() }}
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ needs.deploy-aks.outputs.deployment_id }}
