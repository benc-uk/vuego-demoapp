name: CI Build App

on:
  push:
    branches: [master]
  pull_request:

env:
  IMAGE_REG: ghcr.io
  IMAGE_REPO: benc-uk/vuego-demoapp

jobs:
  test:
    name: "Tests & Linting"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Run gofmt"
        run: .github/scripts/gofmt-action.sh ./server

      - name: "Run golint"
        run: go get -u golang.org/x/lint/golint && $(go env GOPATH)/bin/golint -set_exit_status ./server/...

      - name: "Run tests"
        run: go get gotest.tools/gotestsum && $(go env GOPATH)/bin/gotestsum --format testname --junitfile test-results.xml
        working-directory: ./server

      - name: "Upload test results"
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./server/test-results.xml

      - name: "Report on test results"
        uses: ashley-taylor/junit-report-annotations-action@master
        if: always()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: ./server/test-results.xml
          name: Unit test results

  build:
    name: "Build & Push Image"
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Docker build image"
        run: docker build . -t $IMAGE_REG/$IMAGE_REPO:dev-${{ github.run_id }}

      - name: "Login to GitHub container registry"
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REG }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: "Docker push image to ${{ env.IMAGE_REG }}"
        if: github.ref == 'refs/heads/master'
        run: docker push $IMAGE_REG/$IMAGE_REPO

      - name: "Trigger AKS release pipeline"
        if: github.ref == 'refs/heads/master'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "CD Release - AKS"
          token: ${{ secrets.CR_PAT }}
          inputs: '{ "IMAGE_TAG": "dev-${{ github.run_id }}" }'

      - name: "Trigger Azure web app release pipeline"
        if: github.ref == 'refs/heads/master'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: "CD Release - Webapp"
          token: ${{ secrets.CR_PAT }}
          inputs: '{ "IMAGE_TAG": "dev-${{ github.run_id }}" }'
