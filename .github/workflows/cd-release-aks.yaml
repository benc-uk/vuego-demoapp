#
# Deploy to Azure Kubernetes Service
# Using Helm for parameterized deployment
#

name: CD Release - AKS

on:
  workflow_dispatchZZZ:
    inputs:
      IMAGE_TAG:
        description: 'Image tag to be deployed'
        required: true
        default: 'latest'

# Note. Required secrets: CR_PAT & AZURE_CREDENTIALS

env:
  AKS_NAME: benc
  AKS_RES_GROUP: aks
  HELM_RELEASE: vuego
  HELM_NAMESPACE: demoapps
  INGRESS_DNS_HOST: vuego-demoapp.kube.benco.io

jobs:
  #
  # Deploy to Kubernetes (AKS)
  #
  deploy-aks:
    name: Deploy to AKS with Helm
    runs-on: ubuntu-latest
    environment:
      name: AKS - vuego-demoapp
      url: https://${{ env.INGRESS_DNS_HOST }}/

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Login to Azure'
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Get AKS credentials'
        run: |
          az aks get-credentials -n $AKS_NAME -g $AKS_RES_GROUP

      - name: 'Helm release'
        run: |
          helm repo add benc-uk https://benc-uk.github.io/helm-charts
          helm upgrade ${{ env.HELM_RELEASE }} benc-uk/webapp \
          --install \
          --namespace ${{ env.HELM_NAMESPACE }} \
          --values deploy/kubernetes/aks-live.yaml \
          --set image.tag=${{ github.event.inputs.IMAGE_TAG }},ingress.host=${{ env.INGRESS_DNS_HOST }},env.Weather__ApiKey=${{ secrets.WEATHER_API_KEY }},env.AzureAd__ClientSecret=${{ env.AD_CLIENT_ID }}

  #
  # Post deployment testing stage
  #
  validate-deployment:
    name: 'Run Deployment Tests'
    needs: deploy-aks
    runs-on: ubuntu-latest
    environment:
      name: AKS - vuego-demoapp
      url: https://${{ env.INGRESS_DNS_HOST }}/

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Validate site is running'
        run: .github/scripts/url-check.sh -u https://${{ env.INGRESS_DNS_HOST }} -s "Vue.js" -t 200

      - name: 'Run API tests'
        run: |
          npm install newman --silent
          node_modules/newman/bin/newman.js run tests/postman_collection.json --global-var apphost=${{ env.INGRESS_DNS_HOST }}
