#
# Deploy to Azure App Service as a containerized Web App
# Using Bicep for infrastructure as code
#

name: CD Release - Webapp

on:
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: 'Image tag to be deployed'
        required: true
        default: 'latest'

# Note. Required secrets: CR_PAT & AZURE_CREDENTIALS

env:
  IMAGE_REG: ghcr.io
  IMAGE_REPO: benc-uk/vuego-demoapp
  APP_NAME: vuego-demoapp
  ARM_SUB_ID: 52512f28-c6ed-403e-9569-82a9fb9fec91
  ARM_REGION: westeurope
  ARM_RES_GROUP: apps
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1 # Fixes weird Azure CLI + Bicep + GHA bug

jobs:
  #
  # Deploy Azure infra (App Service) using Bicep
  #
  deploy-infra:
    environment:
      name: App Service - vuego-demoapp
      url: https://${{ env.APP_NAME }}.azurewebsites.net/
    name: 'Deploy Infra'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Login to Azure'
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Create resource group'
        run: az group create --name $ARM_RES_GROUP --location $ARM_REGION

      - name: 'Deploy resources'
        run: |
          az deployment group create --template-file deploy/webapp.bicep -g $ARM_RES_GROUP -p webappName=$APP_NAME \
          webappImage=$IMAGE_REG/$IMAGE_REPO:${{ github.event.inputs.IMAGE_TAG }} \
          releaseInfo="Ref:${{ github.ref }} RunId:${{ github.run_id }}" \
          weatherKey=${{ secrets.WEATHER_API_KEY }} \
          ipStackKey=${{ secrets.IPSTACK_API_KEY }} \
          authClientId=${{ secrets.AUTH_CLIENT_ID }}

  #
  # Post deployment testing stage
  #
  validate-deployment:
    name: 'Run Deployment Tests'
    needs: deploy-infra
    environment:
      name: App Service - vuego-demoapp
      url: https://${{ env.APP_NAME }}.azurewebsites.net/

    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Validate site is running'
        run: .github/scripts/url-check.sh -u https://${APP_NAME}.azurewebsites.net/ -s "Vue.js" -t 200

      - name: 'Run API tests'
        run: |
          npm install newman --silent
          node_modules/newman/bin/newman.js run tests/postman_collection.json --global-var apphost=${APP_NAME}.azurewebsites.net
